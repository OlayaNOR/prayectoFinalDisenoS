/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package controller;

import dto.EncargadoDTO;
import dto.TareaDTO;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.TareaService;


public class VentanaGestionTareasUsuario extends javax.swing.JFrame {

    private TareaService tareaService;
    private EncargadoDTO encargado;
    
    public VentanaGestionTareasUsuario(EncargadoDTO encargado) {
        initComponents();
        setLocationRelativeTo(this);
        tareaService = new TareaService();
        this.encargado = encargado;
        rellenarPorHacer();
        rellenarHechas();
        rellenarHaciendo();
        verTareaHaciendo();
        verTareaHecha();
        verTareaPorHacer();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHechas = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHaciendo = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPorHacer = new javax.swing.JTable();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gestion Tareas"));

        tblHechas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane1.setViewportView(tblHechas);

        tblHaciendo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane2.setViewportView(tblHaciendo);

        tblPorHacer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane3.setViewportView(tblPorHacer);

        btnAtras.setText("INICIO");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAtras)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(btnAtras)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        VentanaUsuario vu = new VentanaUsuario(encargado);
        vu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void rellenarPorHacer(){
        try{
            DefaultTableModel model = new DefaultTableModel();
            String[] columns = new String[1];
            columns[0] = "POR HACER";

            model.setColumnIdentifiers(columns);
            String[] rows = new String[1];

            for (int i = 0; i < tareaService.findByEncargadoId(encargado.getId()).size(); i++) {
                TareaDTO tarea = tareaService.findByEncargadoId(encargado.getId()).get(i);
                if(tarea.getEstado().equals("Por hacer")){
                    rows[0] = tarea.getTitulo();
                    model.addRow(rows);
                }
            }
            tblPorHacer.setModel(model);
        }catch(SQLException e){
            e.getMessage();
        }
        
    }
    
    private void rellenarHaciendo(){
        try{
            DefaultTableModel model = new DefaultTableModel();
            String[] columns = new String[1];
            columns[0] = "HACIENDO";

            model.setColumnIdentifiers(columns);
            String[] rows = new String[1];

            for (int i = 0; i < tareaService.findByEncargadoId(encargado.getId()).size(); i++) {
                TareaDTO tarea = tareaService.findByEncargadoId(encargado.getId()).get(i);
                if(tarea.getEstado().equals("Haciendo")){
                    rows[0] = tarea.getTitulo();
                    model.addRow(rows);
                }
            }
            tblHaciendo.setModel(model);
        }catch(SQLException e){
            e.getMessage();
        }
        
    }
    
    private void rellenarHechas(){
        try{
            DefaultTableModel model = new DefaultTableModel();
            String[] columns = new String[1];
            columns[0] = "HECHAS";

            model.setColumnIdentifiers(columns);
            String[] rows = new String[1];

            for (int i = 0; i < tareaService.findByEncargadoId(encargado.getId()).size(); i++) {
                TareaDTO tarea = tareaService.findByEncargadoId(encargado.getId()).get(i);
                if(tarea.getEstado().equals("Hechas")){
                    rows[0] = tarea.getTitulo();
                    model.addRow(rows);
                }
            }
            tblHechas.setModel(model);
        }catch(SQLException e){
            e.getMessage();
        }
        
    }
    
    private void verTareaPorHacer(){
        
        tblPorHacer.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = tblPorHacer.getSelectedRow(); 
                if (row != -1) { 
                    String mensaje = tblPorHacer.getValueAt(row, 0).toString();

                    JOptionPane.showMessageDialog(null, mensaje);
                    VentanaAsignarTiempo vasig = new VentanaAsignarTiempo(encargado);
                    vasig.setVisible(true);                   
                }          
        }
        
        });
        
    }
    
    private void verTareaHaciendo() {
        tblHaciendo.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = tblHaciendo.getSelectedRow();
                if (row != -1) {
                    try {
                        String mensaje = tblHaciendo.getValueAt(row, 0).toString();
                        TareaDTO tarea = tareaService.getTarea(encargado.getId(), mensaje);

                        JOptionPane.showMessageDialog(null, mensaje);
                        VentanaCambioEstado vce = new VentanaCambioEstado(encargado, tarea);
                        vce.setVisible(true);
                    } catch (SQLException ex) {
                        ex.printStackTrace(); // Para depuración en consola
                        JOptionPane.showMessageDialog(null, "Error al obtener la tarea: " + ex.getMessage());
                    }
                }
            }
        });
    }
    
    private void verTareaHecha(){
        
        tblHechas.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = tblHechas.getSelectedRow(); 
                if (row != -1) { 
//                    String mensaje = tblHechas.getValueAt(row, 0).toString();
//
//                    JOptionPane.showMessageDialog(null, mensaje);
                    JOptionPane.showMessageDialog(null, "REPORTE" + "\n TAREA FINALIZADA CON ÉXITO" +
                        "\n REALIZAR LOGIN " + "\n DESCRIPCIÓN: HACIENDO USO DE JAVA SWING " + 
                        "REALIZAR UNA VENTANA QUE PERMITA LOGEARSE " + "\n PRIORIDAD: ALTA" + "\n ASIGNADO: VALERIA" +
                        "\n TIEMPO ESTIMADO: 6 HORAS " + "\n TIEMPO USADO: 5 HORAS " + "\n COMENTARIOS: COMENTARIOS ");
                }
            
        }
        
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblHaciendo;
    private javax.swing.JTable tblHechas;
    private javax.swing.JTable tblPorHacer;
    // End of variables declaration//GEN-END:variables
}
